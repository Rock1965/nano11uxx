digraph "CShell"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{CShell\n|# m_dbgKey\l|+ CShell()\l+ start()\l+ onQuery()\l+ show_welcome()\l+ show_prompt()\l+ show_menu()\l+ show_task()\l+ show_heap()\l+ show_version()\l+ show_clear()\land 6 more...\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{CThread\n|# m_flag\l|+ start()\l+ start()\l+ resume()\l+ suspend()\l+ getStackHighWaterMark()\l+ isSuspend()\l+ getState()\l+ setPriority()\l+ getPriority()\l+ getName()\l+ isAlive()\l+ kill()\l+ isThread()\l+ resumeAll()\l+ suspendAll()\l+ enterCriticalSection()\l+ exitCriticalSection()\l# run()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d26/class_c_thread.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{CObject\n||+ CObject()\l+ ~CObject()\l+ isThread()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dac/class_c_object.html"];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_console" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Console\n||+ Console()\l+ isConnected()\l+ echo()\l+ clear()\l+ putchar()\l+ getchar()\l+ putstr()\l+ getstr()\l+ write()\l+ read()\land 14 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d56/class_console.html",tooltip="The Console class provides a lightweight input/output stream to console. "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{CSmallPrintf\n||+ CSmallPrintf()\l+ printf()\l+ printf()\l+ putv()\l+ putv()\l+ putv()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/db4/class_c_small_printf.html"];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_sock" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{CStream\n||+ CStream()\l+ ~CStream()\l+ readable()\l+ writeable()\l+ read()\l+ write()\l+ isConnected()\l+ flush()\l+ write()\l+ read()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d16/class_c_stream.html"];
  Node3 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #m_semInput" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{CSemaphore\n||+ counting()\l+ binary()\l+ wait()\l+ release()\l+ waiting()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d06/class_c_semaphore.html"];
  Node3 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #cmd" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{CString\n||+ CString()\l+ CString()\l+ CString()\l+ CString()\l+ ~CString()\l+ getBufSize()\l+ getBuffer()\l+ chkLength()\l+ freeExtra()\l+ length()\land 31 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d99/class_c_string.html",tooltip="a string class inherit from CSmallPrintf. "];
  Node5 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
}
