.TH "usbCDC" 3 "Sun Mar 9 2014" "Version v1.0.2" "uCXpresso.BLE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
usbCDC \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <usb_cdc\&.h>\fP
.PP
Inherits \fBCStream\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBusbCDC\fP (int FIFO_SIZE=128)"
.br
.ti -1c
.RI "bool \fBconnect\fP ()"
.br
.ti -1c
.RI "bool \fBdisconnect\fP ()"
.br
.ti -1c
.RI "void \fBonSetLineCode\fP (CDC_LINE_CODING_T *line)"
.br
.ti -1c
.RI "void \fBonCtrlLineState\fP (uint16_t state)"
.br
.ti -1c
.RI "bool \fBenable\fP ()"
.br
.ti -1c
.RI "bool \fBdisable\fP ()"
.br
.ti -1c
.RI "virtual int \fBreadable\fP ()"
.br
.ti -1c
.RI "virtual int \fBwriteable\fP ()"
.br
.ti -1c
.RI "virtual int \fBread\fP (void *buf, int len, bool block=true)"
.br
.ti -1c
.RI "virtual int \fBwrite\fP (const void *buf, int len, bool block=true)"
.br
.ti -1c
.RI "virtual bool \fBisConnected\fP ()"
.br
.ti -1c
.RI "virtual void \fBflush\fP ()"
.br
.ti -1c
.RI "\fB~usbCDC\fP ()"
.br
.ti -1c
.RI "int \fBon_usb_send\fP ()"
.br
.ti -1c
.RI "void \fBon_usb_recv\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "xHandle \fBm_hUsb\fP"
.br
.ti -1c
.RI "\fBCSemaphore\fP \fBm_semIrq\fP"
.br
.ti -1c
.RI "\fBFIFO_T\fP \fBm_txFiFo\fP"
.br
.ti -1c
.RI "\fBFIFO_T\fP \fBm_rxFiFo\fP"
.br
.ti -1c
.RI "uint16_t \fBm_state\fP"
.br
.ti -1c
.RI "uint32_t \fBm_flag\fP"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "xHandle \fBm_hCdc\fP"
.br
.ti -1c
.RI "xHandle \fBm_irqTask\fP"
.br
.ti -1c
.RI "uint8_t * \fBabBulkBuf\fP"
.br
.ti -1c
.RI "uint32_t \fBpbuf\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "usbCDC::usbCDC (intFIFO_SIZE = \fC128\fP)"

.SS "usbCDC::~usbCDC ()"

.SH "Member Function Documentation"
.PP 
.SS "bool usbCDC::connect ()"

.SS "bool usbCDC::disconnect ()"

.SS "void usbCDC::onSetLineCode (CDC_LINE_CODING_T *line)"

.SS "void usbCDC::onCtrlLineState (uint16_tstate)"

.SS "bool usbCDC::enable ()\fC [inline]\fP"

.SS "bool usbCDC::disable ()\fC [inline]\fP"

.SS "virtual int usbCDC::readable ()\fC [virtual]\fP"
Determine how many data bytes are available to read\&. 
.PP
\fBReturns:\fP
.RS 4
A value to indicate how many data byte is available in the input buffer\&. 
.RE
.PP
\fBRemarks:\fP
.RS 4
the pure virtual function have to implement by child class\&. 
.RE
.PP

.PP
Reimplemented from \fBCStream\fP\&.
.SS "virtual int usbCDC::writeable ()\fC [virtual]\fP"

.SS "virtual int usbCDC::read (void *buf, intlen, boolblock = \fCtrue\fP)\fC [virtual]\fP"

.SS "virtual int usbCDC::write (const void *buf, intlen, boolblock = \fCtrue\fP)\fC [virtual]\fP"

.SS "virtual bool usbCDC::isConnected ()\fC [virtual]\fP"

.SS "virtual void usbCDC::flush ()\fC [virtual]\fP"

.SS "int usbCDC::on_usb_send ()"

.SS "void usbCDC::on_usb_recv ()"

.SH "Member Data Documentation"
.PP 
.SS "xHandle usbCDC::m_hUsb"

.SS "\fBCSemaphore\fP usbCDC::m_semIrq"

.SS "\fBFIFO_T\fP usbCDC::m_txFiFo"

.SS "\fBFIFO_T\fP usbCDC::m_rxFiFo"

.SS "uint16_t usbCDC::m_state"

.SS "uint32_t usbCDC::m_flag"

.SS "xHandle usbCDC::m_hCdc\fC [protected]\fP"

.SS "xHandle usbCDC::m_irqTask\fC [protected]\fP"

.SS "uint8_t* usbCDC::abBulkBuf\fC [protected]\fP"

.SS "uint32_t usbCDC::pbuf\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for uCXpresso\&.BLE from the source code\&.
