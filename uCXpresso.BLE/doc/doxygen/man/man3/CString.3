.TH "CString" 3 "Sun Mar 9 2014" "Version v1.0.2" "uCXpresso.BLE" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CString \- 
.PP
a string class inherit from \fBCSmallPrintf\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'class/string\&.h'\fP
.PP
Inherits \fBCSmallPrintf\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCString\fP (int size=DEF_STRBUF_SIZE)"
.br
.ti -1c
.RI "\fBCString\fP (const \fBCString\fP &str)"
.br
.ti -1c
.RI "\fBCString\fP (LPCTSTR str, int \fBlength\fP=0)"
.br
.ti -1c
.RI "\fBCString\fP (LPTSTR buf)"
.br
.ti -1c
.RI "virtual \fB~CString\fP ()"
.br
.ti -1c
.RI "virtual int \fBgetBufSize\fP ()"
.br
.ti -1c
.RI "virtual LPTSTR \fBgetBuffer\fP (bool lock=false)"
.br
.ti -1c
.RI "virtual int \fBchkLength\fP ()"
.br
.ti -1c
.RI "virtual void \fBfreeExtra\fP ()"
.br
.ti -1c
.RI "virtual int \fBlength\fP ()"
.br
.ti -1c
.RI "virtual void \fBclear\fP ()"
.br
.ti -1c
.RI "virtual TCHAR \fBgetAt\fP (int index)"
.br
.ti -1c
.RI "virtual void \fBsetAt\fP (int index, TCHAR ch)"
.br
.ti -1c
.RI "virtual int \fBcopy\fP (\fBCString\fP &str)"
.br
.ti -1c
.RI "virtual int \fBcopy\fP (LPCTSTR str, int \fBlength\fP)"
.br
.ti -1c
.RI "virtual \fBCString\fP \fBclone\fP ()"
.br
.ti -1c
.RI "virtual LPCTSTR \fBmakeUpper\fP ()"
.br
.ti -1c
.RI "virtual LPCTSTR \fBmakeLower\fP ()"
.br
.ti -1c
.RI "virtual LPCTSTR \fBmakeReverse\fP ()"
.br
.ti -1c
.RI "virtual \fBCString\fP \fBmid\fP (int first, int count)"
.br
.ti -1c
.RI "virtual int \fBfind\fP (LPCTSTR str, int start=0)"
.br
.ti -1c
.RI "virtual int \fBfind\fP (TCHAR ch, int start=0)"
.br
.ti -1c
.RI "virtual int \fBfindIC\fP (LPCTSTR str, int start=0)"
.br
.ti -1c
.RI "virtual int \fBreplace\fP (LPCTSTR oldstr, LPCTSTR newstr)"
.br
.ti -1c
.RI "virtual int \fBuriDecode\fP (LPCTSTR uri)"
.br
.ti -1c
.RI "virtual TCHAR \fBoperator[]\fP (int index)"
.br
.ti -1c
.RI "virtual void \fBoperator=\fP (\fBCString\fP &str)"
.br
.ti -1c
.RI "virtual void \fBoperator=\fP (LPCTSTR str)"
.br
.ti -1c
.RI "virtual \fBCString\fP & \fBoperator+\fP (\fBCString\fP &str)"
.br
.ti -1c
.RI "virtual \fBCString\fP & \fBoperator+\fP (TCHAR ch)"
.br
.ti -1c
.RI "virtual \fBCString\fP & \fBoperator+\fP (LPCTSTR str)"
.br
.ti -1c
.RI "virtual void \fBoperator+=\fP (\fBCString\fP &str)"
.br
.ti -1c
.RI "virtual void \fBoperator+=\fP (TCHAR ch)"
.br
.ti -1c
.RI "virtual void \fBoperator+=\fP (LPCTSTR str)"
.br
.ti -1c
.RI "virtual void \fBoperator+=\fP (int val)"
.br
.ti -1c
.RI "virtual void \fBoperator+=\fP (double val)"
.br
.ti -1c
.RI "virtual void \fBoperator+=\fP (uint32_t val)"
.br
.ti -1c
.RI "virtual bool \fBoperator==\fP (\fBCString\fP &str)"
.br
.ti -1c
.RI "virtual bool \fBoperator==\fP (LPCTSTR str)"
.br
.ti -1c
.RI "virtual LPCTSTR \fBoperator*\fP ()"
.br
.ti -1c
.RI "virtual \fBoperator LPCTSTR\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
a string class inherit from \fBCSmallPrintf\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "CString::CString (intsize = \fCDEF_STRBUF_SIZE\fP)"

.SS "CString::CString (const \fBCString\fP &str)"

.SS "CString::CString (LPCTSTRstr, intlength = \fC0\fP)"

.SS "CString::CString (LPTSTRbuf)"

.SS "virtual CString::~CString ()\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "virtual int CString::getBufSize ()\fC [virtual]\fP"

.SS "virtual LPTSTR CString::getBuffer (boollock = \fCfalse\fP)\fC [virtual]\fP"

.SS "virtual int CString::chkLength ()\fC [virtual]\fP"

.SS "virtual void CString::freeExtra ()\fC [virtual]\fP"

.SS "virtual int CString::length ()\fC [virtual]\fP"

.SS "virtual void CString::clear ()\fC [virtual]\fP"

.SS "virtual TCHAR CString::getAt (intindex)\fC [virtual]\fP"

.SS "virtual void CString::setAt (intindex, TCHARch)\fC [virtual]\fP"

.SS "virtual int CString::copy (\fBCString\fP &str)\fC [virtual]\fP"

.SS "virtual int CString::copy (LPCTSTRstr, intlength)\fC [virtual]\fP"

.SS "virtual \fBCString\fP CString::clone ()\fC [virtual]\fP"

.SS "virtual LPCTSTR CString::makeUpper ()\fC [virtual]\fP"

.SS "virtual LPCTSTR CString::makeLower ()\fC [virtual]\fP"

.SS "virtual LPCTSTR CString::makeReverse ()\fC [virtual]\fP"

.SS "virtual \fBCString\fP CString::mid (intfirst, intcount)\fC [virtual]\fP"

.SS "virtual int CString::find (LPCTSTRstr, intstart = \fC0\fP)\fC [virtual]\fP"

.SS "virtual int CString::find (TCHARch, intstart = \fC0\fP)\fC [virtual]\fP"

.SS "virtual int CString::findIC (LPCTSTRstr, intstart = \fC0\fP)\fC [virtual]\fP"

.SS "virtual int CString::replace (LPCTSTRoldstr, LPCTSTRnewstr)\fC [virtual]\fP"

.SS "virtual int CString::uriDecode (LPCTSTRuri)\fC [virtual]\fP"

.SS "virtual TCHAR CString::operator[] (intindex)\fC [virtual]\fP"

.SS "virtual void CString::operator= (\fBCString\fP &str)\fC [virtual]\fP"

.SS "virtual void CString::operator= (LPCTSTRstr)\fC [virtual]\fP"

.SS "virtual \fBCString\fP& CString::operator+ (\fBCString\fP &str)\fC [virtual]\fP"

.SS "virtual \fBCString\fP& CString::operator+ (TCHARch)\fC [virtual]\fP"

.SS "virtual \fBCString\fP& CString::operator+ (LPCTSTRstr)\fC [virtual]\fP"

.SS "virtual void CString::operator+= (\fBCString\fP &str)\fC [virtual]\fP"

.SS "virtual void CString::operator+= (TCHARch)\fC [virtual]\fP"

.SS "virtual void CString::operator+= (LPCTSTRstr)\fC [virtual]\fP"

.SS "virtual void CString::operator+= (intval)\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual void CString::operator+= (doubleval)\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual void CString::operator+= (uint32_tval)\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual bool CString::operator== (\fBCString\fP &str)\fC [virtual]\fP"

.SS "virtual bool CString::operator== (LPCTSTRstr)\fC [virtual]\fP"

.SS "virtual LPCTSTR CString::operator* ()\fC [inline]\fP, \fC [virtual]\fP"

.SS "virtual CString::operator LPCTSTR ()\fC [inline]\fP, \fC [virtual]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for uCXpresso\&.BLE from the source code\&.
